{
  "compilerOptions": {
    "target": "es6",
    "lib": [
      "dom",
      "dom.iterable",
      "esnext"
    ],
    "paths": {},
    "allowJs": true, //允许编译 JavaScript 文件
    "skipLibCheck": true, // 跳过所有声明文件的类型检查
    "esModuleInterop": true, // 禁用命名空间引用 (import * as fs from "fs") 启用 CJS/AMD/UMD 风格引用 (import fs from "fs") !!
    "allowSyntheticDefaultImports": true, // 允许从没有默认导出的模块进行默认导入
    "strict": true, // 启用所有严格类型检查选项
    "forceConsistentCasingInFileNames": true, // 不允许对同一个文件使用不一致格式的引用
    "noFallthroughCasesInSwitch": true,
    "module": "esnext", // 指定模块代码生成
    "moduleResolution": "node",
    "resolveJsonModule": true,
    "isolatedModules": true,
    "noEmit": true, // 不输出(意思是不编译代码，只执行类型检查)
    "jsx": "react-jsx", // 在.tsx文件中支持JSX
    //inc
    "incremental": true, // 通过从以前的编译中读取/写入信息到磁盘上的文件来启用增量编译
    "experimentalDecorators": true, // 启用对ES装饰器的实验性支持
    "noUnusedParameters": false, // 报告未使用参数的错误  !!
    "noUnusedLocals": false, // 报告未使用的本地变量的错误 !!
    // "declaration": true, // 生成相应的.d.ts文件  !!取消 以防止使用 pnpm 报缺少依赖
    "sourceMap": true, // 生成相应的.map文件
    "alwaysStrict": true, //总是启用严格模式 inc
    "strictFunctionTypes": false, //严格的函数类型检查 inc
    "strictPropertyInitialization": false, //严格的属性初始化 inc

  },
  "include": [
    "src/**/*"
  ],
  "exclude": [
    "node_modules",
    "build"
  ],
  // *** 参考引用 #vite 启动配置 ***
  // "references": [
  //   {
  //     "path": "./tsconfig.node.json"
  //   }
  // ]
}